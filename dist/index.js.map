{"version":3,"file":"index.js","sources":["../src/Typewriter.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nexport interface TypewriterProps {\n  children: string\n  delay?: number\n  stopBlinkinOnComplete?: any\n  className?: string\n  onComplete: () => void\n  cursor?: string\n  cursorClassName?: string\n  TextWrapper: any\n}\n\nexport function Typewriter({\n  TextWrapper,\n  delay = 100,\n  children,\n  stopBlinkinOnComplete = false,\n  className,\n  onComplete = () => {},\n  cursor = '|',\n  cursorClassName = undefined\n}: TypewriterProps) {\n  const [text, setText] = useState('')\n  const [pointer, setPointer] = useState(-1)\n  const [isBlinking, setBlinking] = useState(true)\n\n  useEffect(() => {\n    if (pointer < children.length) {\n      setTimeout(() => {\n        setText(text + children.charAt(pointer))\n        setPointer(pointer + 1)\n      }, delay)\n    } else {\n      if (stopBlinkinOnComplete) setBlinking(false)\n      onComplete()\n    }\n  }, [pointer])\n\n  return (\n    <span className={className}>\n      {TextWrapper\n        ? (props: any) => <TextWrapper {...props}>{text}</TextWrapper>\n        : text}\n      {isBlinking ? (\n        <span className={cursorClassName || 'blinkingCursor'}>{cursor}</span>\n      ) : null}\n    </span>\n  )\n}\n"],"names":["TextWrapper","delay","children","stopBlinkinOnComplete","className","onComplete","cursor","cursorClassName","undefined","useState","text","setText","pointer","setPointer","isBlinking","setBlinking","useEffect","length","setTimeout","charAt","React","props"],"mappings":"mHAcEA,IAAAA,gBACAC,MAAAA,aAAQ,MACRC,IAAAA,aACAC,sBAAAA,gBACAC,IAAAA,cACAC,WAAAA,aAAa,mBACbC,OAAAA,aAAS,UACTC,gBAAAA,kBAAkBC,MAEMC,WAAS,IAA1BC,OAAMC,SACiBF,YAAU,GAAjCG,OAASC,SACkBJ,YAAS,GAApCK,OAAYC,OAcnB,OAZAC,YAAU,WACJJ,EAAUV,EAASe,OACrBC,WAAW,WACTP,EAAQD,EAAOR,EAASiB,OAAOP,IAC/BC,EAAWD,EAAU,IACpBX,IAECE,GAAuBY,GAAY,GACvCV,MAED,CAACO,IAGFQ,wBAAMhB,UAAWA,GACdJ,EACG,SAACqB,UAAeD,gBAACpB,mBAAgBqB,GAAQX,IACzCA,EACHI,EACCM,wBAAMhB,UAAWG,GAAmB,kBAAmBD,GACrD"}